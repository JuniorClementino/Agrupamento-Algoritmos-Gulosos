let UnionFind = require('union-find');          // --- Union-find structure
let Utils = require('utils');                   // --- 

exports.kruskal = function(graph, k){

    console.log("--- Running Kruskal");

    // --- Saves some stats
    let benchmark = {};    
    benchmark.kruskalExecutionStart = Date.now();

    // --- Sort edges array by edges lenght 
    graph.edges.sort(function(a, b) {
        return a.d - b.d;
    });

    // --- Creates new Union-Find structure
    let unionFind = new UnionFind.unionFind(graph.nodeCount);

    // --- For each edge on edges list
    for(i = 0; i < graph.edgeCount; i++){

        // --- Get the group associated with each node
        let groupV1 = unionFind.find(graph.edges[i].v1);
        let groupV2 = unionFind.find(graph.edges[i].v2);        

        // --- If the nodes are in different groups and the number of selected edges is less than the number of edges - k
        if(groupV1 != groupV2 && graph.mstEdgeList.length < graph.nodeCount - k){        
            graph.mstEdgeList.push(graph.edges[i]);
            unionFind.union(graph.edges[i].v1, graph.edges[i].v2);
        }
    }

    // --- Some more stats
    benchmark.kruskalExecutionEnd = Date.now();
    benchmark.kruskalExecutionTime = benchmark.kruskalExecutionEnd - benchmark.kruskalExecutionStart;    

    console.log("    Kruskal Run Time", benchmark.kruskalExecutionTime, "ms\n");  
      
    
    return Utils.formatClusterIndexes(unionFind);
}